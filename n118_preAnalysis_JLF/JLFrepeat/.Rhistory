grmpyVOL <- read.csv("/data/joy/BBL/projects/jirsaraieStructuralIrrit/data/JLFrepeat/n118_jlfAntsCTIntersectionVol_20170911.csv")
pncVOL <- read.csv("/data/joy/BBL/projects/jirsaraieStructuralIrrit/data/JLFrepeat/n1601_jlfAntsCTIntersectionVol_20170412.csv")
grmpyCT <- read.csv("/data/joy/BBL/projects/jirsaraieStructuralIrrit/data/JLFrepeat/n118_jlfAntsCTIntersectionCT_20170911.csv")
pncCT <- read.csv("/data/joy/BBL/projects/jirsaraieStructuralIrrit/data/JLFrepeat/n1601_jlfAntsCTIntersectionCT_20170331.csv")
grmpyGMD <- read.csv("/data/joy/BBL/projects/jirsaraieStructuralIrrit/data/JLFrepeat/n118_jlfAntsCTIntersectionGMDr_20171104.csv")
pncGMD <- read.csv("/data/joy/BBL/projects/jirsaraieStructuralIrrit/data/JLFrepeat/n1601_jlfAtroposIntersectionGMD_20170410.csv")
missVOL <- read.csv("/data/joy/BBL/studies/pnc/n2416_dataFreeze/neuroimaging/t1struct/n2416_jlfAntsCTIntersectionVol_20170412.csv")
missCT <- read.csv("/data/joy/BBL/studies/pnc/n2416_dataFreeze/neuroimaging/t1struct/n2416_jlfAntsCTIntersectionCt_20170331.csv")
missGMD <- read.csv("/data/joy/BBL/studies/pnc/n2416_dataFreeze/neuroimaging/t1struct/n2416_jlfAtroposIntersectionGMD_20170410.csv")
missVOL<-missVOL[ which(missVOL$bblid=='99964'), ]
missCT<-missCT[ which(missCT$bblid=='99964'), ]
missGMD<-missGMD[ which(missGMD$bblid=='99964'), ]
pncVOL <- rbind(pncVOL,missVOL)
pncCT <- rbind(pncCT,missCT)
pncGMD <- rbind(pncGMD,missGMD)
pncVOL <- pncVOL[(pncVOL$bblid %in% grmpyVOL$bblid),]
pncCT <- pncCT[(pncCT$bblid %in% grmpyCT$bblid),]
pncGMD <- pncGMD[(pncGMD$bblid %in% grmpyGMD$bblid),]
columnsPNC<-colnames(pncGMD, do.NULL = TRUE, prefix = "col")
columnsGRMPY<-colnames(grmpyGMD, do.NULL = TRUE, prefix = "col")
setdiff(columnsPNC,columnsgrmpy)
pncGMD$mprage_jlf_gmd_R_Pallidum<- NULL
pncGMD$mprage_jlf_gmd_L_Pallidum<- NULL
pncGMD$mprage_jlf_gmd_Brain_Stem<- NULL
pncGMD$mprage_jlf_gmd_R_Thalamus_Proper<- NULL
pncGMD$mprage_jlf_gmd_L_Thalamus_Proper<- NULL
pncGMD$mprage_jlf_gmd_R_OCP<- NULL
pncGMD$mprage_jlf_gmd_L_OCP<- NULL
columnsPNC<-colnames(pncGMD, do.NULL = TRUE, prefix = "col")
columnsGRMPY<-colnames(grmpyGMD, do.NULL = TRUE, prefix = "col")
setdiff(columnsPNC,columnsGRMPY)
write.csv(pncVOL, paste('/data/joy/BBL/projects/jirsaraieStructuralIrrit/data/JLFrepeat/n236_jlfAntsCTIntersectionVOL_',format(Sys.Date(), format="%Y%m%d"),'.csv', sep=''), quote=F, row.names=F)
write.csv(pncCT, paste('/data/joy/BBL/projects/jirsaraieStructuralIrrit/data/JLFrepeat/n236_jlfAntsCTIntersectionCT_',format(Sys.Date(), format="%Y%m%d"),'.csv', sep=''), quote=F, row.names=F)
write.csv(pncGMD, paste('/data/joy/BBL/projects/jirsaraieStructuralIrrit/data/JLFrepeat/n236_jlfAtroposIntersectionGMD_',format(Sys.Date(), format="%Y%m%d"),'.csv', sep=''), quote=F, row.names=F)
write.csv(pncVOL, paste('/data/joy/BBL/projects/jirsaraieStructuralIrrit/output/temp/n118_jlfAntsCTIntersectionVOL_',format(Sys.Date(), format="%Y%m%d"),'.csv', sep=''), quote=F, row.names=F)
write.csv(pncCT, paste('/data/joy/BBL/projects/jirsaraieStructuralIrrit/output/temp/n118_jlfAntsCTIntersectionCT_',format(Sys.Date(), format="%Y%m%d"),'.csv', sep=''), quote=F, row.names=F)
write.csv(pncGMD, paste('/data/joy/BBL/projects/jirsaraieStructuralIrrit/output/temp/n118_jlfAtroposIntersectionGMD_',format(Sys.Date(), format="%Y%m%d"),'.csv', sep=''), quote=F, row.names=F)
grmpyARI <- read.csv("/data/joy/BBL/projects/jirsaraieStructuralIrrit/data/JLFrepeat/n118_Irritability_20171101.csv")
grmpyDemo <- read.csv("/data/joy/BBL/projects/jirsaraieStructuralIrrit/data/JLFrepeat/n118_Demographics_20171101.csv")
pncDemo <- read.csv("/data/joy/BBL/projects/jirsaraieStructuralIrrit/data/JLFrepeat/n1601_demographics_go1_20161212.csv")
grmpyQA <- read.csv("/data/joy/BBL/projects/jirsaraieStructuralIrrit/data/JLFrepeat/n118_structQAFlags_20171103.csv")
pncQA <- read.csv("/data/joy/BBL/projects/jirsaraieStructuralIrrit/data/JLFrepeat/n1601_t1QaData_20170306.csv")
grmpyQA <- grmpyQA[c("bblid","scanid", "ManualRating", "T1exclude")]
pncQA <- pncQA[c("bblid", "scanid", "averageManualRating", "t1Exclude")]
pncDemo <- pncDemo[c("bblid", "scanid", "ageAtScan1", "sex", "race")]
pncDemo <- pncDemo[(pncDemo$bblid %in% grmpyDemo$bblid),]
pncQA <- pncQA[(pncQA$bblid %in% grmpyQA$bblid),]
setdiff(grmpyQA$bblid,pncQA$bblid)
pncQA <- rbind(pncQA, c(99964, 9964, 1.33333, 0))
pncDemo$ageAtScan1 <- pncDemo$ageAtScan1 / 12
pncDemo$sex <- grmpyDemo$sex
pncDemo$race <- grmpyDemo$race
pncQA$t1Exclude[pncQA$t1Exclude == 0] <- 3
pncQA$t1Exclude[pncQA$t1Exclude == 1] <- 0
pncQA$t1Exclude[pncQA$t1Exclude == 3] <- 1
colnames(pncDemo)[3] <- "ageatscan"
colnames(pncQA)[3] <- "ManualRating"
colnames(pncQA)[4] <- "T1exclude"
colnames(grmpyARI)[3] <- "ARIavg"
colnames(grmpyARI)[4] <- "ARItotal"
REDS<-read.csv("/data/joy/BBL/projects/jirsaraieStructuralIrrit/data/JLFchange/n118_Demo+ARI+QA_20171117.rds")
RDS<-readRDS("/data/joy/BBL/projects/jirsaraieStructuralIrrit/data/JLFchange/n118_Demo+ARI+QA_20171117.rds")
View(RDS)
vol<-read.csv("/data/joy/BBL/projects/jirsaraieStructuralIrrit/output/temp/n118_jlfAntsCTIntersectionCT_20171118.csv")
View(vol)
View(RDS)
VOL<-read.csv("/data/joy/BBL/projects/jirsaraieStructuralIrrit/output/temp/n112_rds_n118_Demo+ARI+QA_20171117_inclusion_T1exclude_ROI_n118_jlfAntsCTIntersectionCT_20171118/gam_formula_sageatscank4_ARItotal_ManualRating_sex_coefficients.csv")
View(VOL)
VOL <- VOL[order(VOL$pval.fdrari_total),]
VOL <- VOL[order(VOL$pval.fdrari_total),]
VOL <- VOL[order(VOL$pval.fdrARItotal),]
View(VOL)
CT<-read.csv("/data/joy/BBL/projects/jirsaraieStructuralIrrit/output/temp/n112_rds_n118_Demo+ARI+QA_20171117_inclusion_T1exclude_ROI_n118_jlfAntsCTIntersectionCT_20171118/gam_formula_sageatscank4_ARItotal_ManualRating_sex_coefficients.csv")
CT <- CT[order(CT$pval.fdrARItotal),]
View(CT)
Reward<-read.csv("/home/rjirsaraie/n477_jlfAntsCTIntersectionCt_20170731.csv ")
Reward<-read.csv("/home/rjirsaraie/n477_jlfAntsCTIntersectionCt_20170731.csv")
Sample<-read.csv("/home/rjirsaraie/Testing/RewardReplication/Output/n10_jlfAntsCTIntersectionCt_20171121.csv")
Reduced <- Reward[(Reward$bblid %in% Sample$bblid),]
View(Reduced)
Reduced <- NULL
ls
ls
Reduced <- Reward[(Reward$scanid %in% Sample$scanid),]
View(Sample)
View(Reduced)
View(Sample)
View(Reduced)
Reward <- Reward[order(Reward$bblid),]
View(Reduced)
View(Reward)
Sample <- Sample[order(Sample$bblid),]
View(Sample)
View(Reduced)
View(Reduced)
View(Sample)
View(Reduced)
View(Reduced)
View(Sample)
View(Reduced)
View(Sample)
View(Reduced)
jlfDirectory="/data/joy/BBL/studies/reward/processedData/structural/struct_pipeline_replication_20171114/*/*/jlf/"
jlfVolDir="/home/rjirsaraie/Testing/RewardReplication/RewardOutput/"
ctDirectory="/data/joy/BBL/studies/reward/processedData/structural/struct_pipeline_replication_20171114/*/*/antsCT/"
scriptsDir="/data/joy/BBL/projects/pncReproc2015/pncReproc2015Scripts/jlf/volumeValuesScripts"
subjInfoDir="/data/joy/BBL/studies/pnc/subjectData/"
# First thing we have to do is create the raw volume output for the jlf labels
rm -f ${jlfVolDir}jlfVolValues_20170719.txt
for i in `find ${jlfDirectory} -name "*_LabelsAntsCTIntersect.nii.gz "` ; do vals=`fslstats ${i} -H 208 0 207` ; echo ${i} ${vals} ; done >> ${jlfVolDir}jlfVolValues_20170719.txt
# Now do the antsCT values
rm -f ${jlfVolDir}ctVolValues_20170719.txt
for i in `find ${ctDirectory} -maxdepth 12 -name "*BrainSegmentation.nii.gz"` ; do vals=`fslstats ${i} -H 7 0 6` ; echo ${i} ${vals} ; done >> ${jlfVolDir}ctVolValues_20170719.txt
# Now fix the subject fields using an *NON FLEXIBLE R SCRIPT*
R --slave -f ${scriptsDir}/prepSubjFields.R ${jlfVolDir}jlfVolValues_20170719.txt
R --slave -f ${scriptsDir}/prepSubjFields.R ${jlfVolDir}ctVolValues_20170719.txt
# Now I need to adjust the headers of the proper Subject field files
R --slave -f ${scriptsDir}/prepVolHeader.R ${jlfVolDir}jlfVolValues_20170719properSubjFields.csv
R --slave -f ${scriptsDir}/prepCtHeader.R ${jlfVolDir}ctVolValues_20170719properSubjFields.csv
# Now find voxel dimensions for each scan
for i in `find ${jlfDirectory} -name "*_Labels.nii.gz"` ; do
xDim=`fslinfo ${i} | grep pixdim1 | cut -f 9 -d ' '`
yDim=`fslinfo ${i} | grep pixdim2 | cut -f 9 -d ' '`
zDim=`fslinfo ${i} | grep pixdim3 | cut -f 9 -d ' '`
voxDem=`echo "${xDim}*${yDim}*${zDim}" | bc`
echo ${i} ${voxDem} >> ${jlfVolDir}voxelVolume_20170719.txt ;
done
# Now I need to combine the manual ratings, jlf and ct values
R --slave -f ${scriptsDir}/prepSubjFields.R ${jlfVolDir}voxelVolume_20170719.txt
R --slave -f ${scriptsDir}/combineAllVolVals.R ${jlfVolDir}jlfVolValues_20170719properSubjFieldsProperColNames.csv  ${jlfVolDir}ctVolValues_20170719properSubjFieldsProperColNames.csv ${subjInfoDir}n1601_t1RawManualQA.csv ${subjInfoDir}n368_t1RawManualQA_GO2.csv ${jlfVolDir}voxelVolume_20170719properSubjFields.csv
# Now clean up
rm -f ${jlfVolDir}*properSubjField.csv ${jlfVolDir}*ProperColNames.csv ${jlfVolDir}voxelVolume_20170719.txt ${jlfVolDir}ctVolValues_20170719.txt ${jlfVolDir}jlfVolValues_20170719.txt
# Delcare any statics
jlfDirectory="/data/joy/BBL/studies/reward/processedData/structural/struct_pipeline_replication_20171114/*/*/jlf/"
jlfVolDir="/home/rjirsaraie/Testing/RewardReplication/RewardOutput/"
ctDirectory="/data/joy/BBL/studies/reward/processedData/structural/struct_pipeline_replication_20171114/*/*/antsCT/"
scriptsDir="/data/joy/BBL/projects/pncReproc2015/pncReproc2015Scripts/jlf/volumeValuesScripts"
subjInfoDir="/data/joy/BBL/studies/pnc/subjectData/"
# First thing we have to do is create the raw volume output
for i in `find ${jlfDirectory} -name "*_LabelsAntsCTIntersect.nii.gz "` ; do vals=`fslstats ${i} -H 208 0 207` ; echo ${i} ${vals} ; done >> ${jlfVolDir}jlfVolValues_20170719.txt
#    3.) Manual QA Values
# Load library(s)
source('/home/arosen/adroseHelperScripts/R/afgrHelpFunc.R')
install_load('tools')
# Load pre-made data
jlfVals <- read.csv('/home/rjirsaraie/Testing/RewardReplication/Output/jlfVolValues_20170719properSubjFields.csv')
ctVals <- read.csv('/home/rjirsaraie/Testing/RewardReplication/Output/ctVolValues_20170719properSubjFields.csv')
voxelDim <- read.csv('/home/rjirsaraie/Testing/RewardReplication/Output/voxelVolume_20170719properSubjFields.csv')
voxelDim <- voxelDim[which(duplicated(voxelDim)=='FALSE'),]
# Load project-specific data
n477.subjs <- read.csv('/home/rjirsaraie/Testing/RewardReplication/CohortFile/n10_CohortHeading_20171114.csv')
n477.subjs <- n477.subjs[,c(2,1)]
# Convert all of our voxel counts to mm3
jlfVals <- merge(jlfVals, voxelDim, by=c('subject.0.', 'subject.1.'))
jlfVals[,3:131] <- apply(jlfVals[,3:131], 2, function(x) (x * jlfVals$output))
jlfVals <- jlfVals[,-132]
ctVals <- merge(ctVals, voxelDim, by=c('subject.0.', 'subject.1.'))
ctVals[,3:9] <- apply(ctVals[,3:9], 2, function(x) (x * ctVals$output))
ctVals <- ctVals[,-10]
# Now fix the column names
colnames(jlfVals)[1:2] <- c('bblid', 'scanid')
colnames(ctVals)[1:2] <- c('bblid', 'scanid')
# Now fix scanid
jlfVals[,2] <- strSplitMatrixReturn(charactersToSplit=jlfVals[,2], splitCharacter='x')[,2]
ctVals[,2] <- strSplitMatrixReturn(charactersToSplit=ctVals[,2], splitCharacter='x')[,2]
# Now write the n1601 file
# Start with JLF volumes
n477.vol.vals <- merge(n477.subjs, jlfVals, by=c('bblid', 'scanid'))
n477.vol.ct.vals <- merge(n477.subjs, ctVals, by=c('bblid', 'scanid'))
# Now write the output
write.csv(n477.vol.vals, paste('/home/rjirsaraie/Testing/RewardReplication/Output/n10_jlfAntsCTIntersectionVol_',format(Sys.Date(), format="%Y%m%d"),'.csv', sep=''), quote=F, row.names=F)
write.csv(n477.vol.ct.vals, paste('/home/rjirsaraie/Testing/RewardReplication/Output/n10_ctVol',format(Sys.Date(), format="%Y%m%d"), '.csv', sep=''), quote=F, row.names=F)
jlfVals <- read.csv('/home/rjirsaraie/Testing/RewardReplication/Output/jlfVolValues_20170719properSubjFields.csv')
ctVals <- read.csv('/home/rjirsaraie/Testing/RewardReplication/Output/ctVolValues_20170719properSubjFields.csv')
voxelDim <- read.csv('/home/rjirsaraie/Testing/RewardReplication/Output/voxelVolume_20170719properSubjFields.csv')
View(jlfVals)
View(ctVals)
View(voxelDim)
View(`n477.vol.ct.vals`)
View(`n477.vol.vals`)
View(`n477.subjs`)
n477.subjs <- read.csv('/home/rjirsaraie/Testing/RewardReplication/CohortFile/n10_CohortHeading_20171114.csv')
n477.subjs <- n477.subjs[,c(2,1)]
View(`n477.vol.ct.vals`)
View(`n477.subjs`)
jlfVals <- merge(jlfVals, voxelDim, by=c('subject.0.', 'subject.1.'))
View(jlfVals)
jlfVals[,3:131] <- apply(jlfVals[,3:131], 2, function(x) (x * jlfVals$output))
View(jlfVals)
jlfVals <- jlfVals[,-132]
View(jlfVals)
ctVals <- merge(ctVals, voxelDim, by=c('subject.0.', 'subject.1.'))
ctVals[,3:9] <- apply(ctVals[,3:9], 2, function(x) (x * ctVals$output))
ctVals <- ctVals[,-10]
View(ctVals)
colnames(jlfVals)[1:2] <- c('bblid', 'scanid')
colnames(ctVals)[1:2] <- c('bblid', 'scanid')
jlfVals[,2] <- strSplitMatrixReturn(charactersToSplit=jlfVals[,2], splitCharacter='x')[,2]
ctVals[,2] <- strSplitMatrixReturn(charactersToSplit=ctVals[,2], splitCharacter='x')[,2]
n477.vol.vals <- merge(n477.subjs, jlfVals, by=c('bblid', 'scanid'))
n477.vol.ct.vals <- merge(n477.subjs, ctVals, by=c('bblid', 'scanid'))
write.csv(n477.vol.vals, paste('/home/rjirsaraie/Testing/RewardReplication/Output/n10_jlfAntsCTIntersectionVol_',format(Sys.Date(), format="%Y%m%d"),'.csv', sep=''), quote=F, row.names=F)
source('/home/arosen/adroseHelperScripts/R/afgrHelpFunc.R')
install_load('tools')
jlfVals <- read.csv('/home/rjirsaraie/Testing/RewardReplication/Output/jlfVolValues_20170719properSubjFields.csv')
ctVals <- read.csv('/home/rjirsaraie/Testing/RewardReplication/Output/ctVolValues_20170719properSubjFields.csv')
voxelDim <- read.csv('/home/rjirsaraie/Testing/RewardReplication/Output/voxelVolume_20170719properSubjFields.csv')
voxelDim <- voxelDim[which(duplicated(voxelDim)=='FALSE'),]
# Load project-specific data
n477.subjs <- read.csv('/home/rjirsaraie/Testing/RewardReplication/CohortFile/n10_CohortHeading_20171114.csv')
n477.subjs <- n477.subjs[,c(2,1)]
jlfVals <- merge(jlfVals, voxelDim, by=c('subject.0.', 'subject.1.'))
jlfVals[,3:131] <- apply(jlfVals[,3:131], 2, function(x) (x * jlfVals$output))
jlfVals <- jlfVals[,-132]
ctVals <- merge(ctVals, voxelDim, by=c('subject.0.', 'subject.1.'))
ctVals[,3:9] <- apply(ctVals[,3:9], 2, function(x) (x * ctVals$output))
ctVals <- ctVals[,-10]
View(jlfVals)
View(ctVals)
View(jlfVals)
colnames(jlfVals)[1:2] <- c('bblid', 'scanid')
colnames(ctVals)[1:2] <- c('bblid', 'scanid')
View(ctVals)
View(jlfVals)
View(jlfVals)
jlfVals[,2] <- strSplitMatrixReturn(charactersToSplit=jlfVals[,2], splitCharacter='x')[,2]
ctVals[,2] <- strSplitMatrixReturn(charactersToSplit=ctVals[,2], splitCharacter='x')[,2]
n477.vol.vals <- merge(n477.subjs, jlfVals, by=c('bblid', 'scanid'))
n477.vol.ct.vals <- merge(n477.subjs, ctVals, by=c('bblid', 'scanid'))
View(`n477.vol.ct.vals`)
View(`n477.vol.vals`)
View(ctVals)
View(jlfVals)
View(jlfVals)
View(jlfVals)
View(voxelDim)
